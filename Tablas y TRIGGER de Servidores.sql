CREATE DATABASE DCCLON;
USE DCCLON;

CREATE TABLE USUARIOS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NombreUsuario VARCHAR(50) NOT NULL UNIQUE,
    Correo VARCHAR(100) NOT NULL UNIQUE,
    Contrase√±a VARCHAR(250) NOT NULL,
    FechaRegistro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Estado ENUM('activo','inactivo','baneado') DEFAULT 'activo',
    Avatar VARCHAR(250)
);

CREATE TABLE SERVIDORES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    Nombre VARCHAR(50) NOT NULL,
	CREADOR_ID INT NOT NULL,
    FechaCreacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Descripcion TEXT,
    FOREIGN KEY (CREADOR_ID) REFERENCES USUARIOS(ID)
);
-- Hacer TRIGGER para el nombre que si es default sea Servidor de Nombre Usuario
CREATE TABLE ROLES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    Nombre VARCHAR(50) NOT NULL,
    SERVIDOR_ID INT NOT NULL,
    Permisos JSON,
    Color VARCHAR(7) DEFAULT '#FFFFFF',
    USUARIO_ID INT NOT NULL,
    
    FOREIGN KEY (SERVIDOR_ID) REFERENCES SERVIDORES(ID),
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID)
);

CREATE TABLE SOLICITUDES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    REMITENTE_ID INT NOT NULL,
    DESTINATARIO_ID INT NOT NULL,
    Estado ENUM('pendiente','aceptado','rechazada') DEFAULT 'pendiente' NOT NULL,
    FechaEnvio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (REMITENTE_ID) REFERENCES USUARIOS(ID),
    FOREIGN KEY (DESTINATARIO_ID) REFERENCES USUARIOS(ID)
);

CREATE TABLE MENSAJES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    Contenido VARCHAR(250) NOT NULL,
    USUARIO_ID INT NOT NULL,
    CANAL_ID INT NOT NULL,
    SERVIDOR_ID INT,
    FechaEnvio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Tipo ENUM('texto','imagen','video','enlace','documento','musica','comprimido') DEFAULT 'texto' NOT NULL,
    RESPUESTA_A INT,
    
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID),
    FOREIGN KEY (CANAL_ID) REFERENCES CANALES(ID),
    FOREIGN KEY (SERVIDOR_ID) REFERENCES SERVIDORES(ID),
    FOREIGN KEY (RESPUESTA_A) REFERENCES MENSAJES(ID)
);

CREATE TABLE AMISTADES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ID1 INT NOT NULL,
    USUARIO_ID2 INT NOT NULL,
    FechaAmistad TIMESTAMP,
    Estado ENUM('activo','bloqueado','silenciado') DEFAULT 'activo',
    
    FOREIGN KEY (USUARIO_ID1) REFERENCES USUARIOS(ID),
    FOREIGN KEY (USUARIO_ID2) REFERENCES USUARIOS(ID)
);

CREATE TABLE TRANSMISION(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ID INT NOT NULL,
    CANAL_ID INT NOT NULL,
    SERVIDOR_ID INT,
    FechaInicio TIMESTAMP,
    FechaFin TIMESTAMP,
    Estado ENUM('en vivo', 'finalizado'),
    
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIOS(ID),
    FOREIGN KEY(CANAL_ID) REFERENCES CANALES(ID),
    FOREIGN KEY(SERVIDOR_ID) REFERENCES SERVIDORES(ID)
);

CREATE TABLE CANALES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	Nombre VARCHAR(250) NOT NULL,
    Tipo ENUM('texto','voz','video') DEFAULT 'texto',
    SERVIDOR_ID INT,
    ROL_ID INT,
    FechaCreacion TIMESTAMP,
    
    FOREIGN KEY(SERVIDOR_ID) REFERENCES SERVIDORES(ID),
    FOREIGN KEY(ROL_ID) REFERENCES ROLES(ID)
);

CREATE TABLE REACCIONES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    MENSAJE_ID INT NOT NULL,
    USUARIO_ID INT NOT NULL,
    Reaccion ENUM ('texto','emoji','simbolo'),
    FechaReaccion TIMESTAMP,
    
    FOREIGN KEY(MENSAJE_ID) REFERENCES MENSAJES(ID),
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIOS(ID)
);

CREATE TABLE NOTIFICACIONES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ID INT NOT NULL,
    Tipo ENUM('mensaje','solicitud','llamada','reaccion','invitaciones'),
    Contenido VARCHAR(250),
    Leido BOOLEAN,
    FechaCreacion TIMESTAMP,
    
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIOS(ID)
);
DROP TABLE NOTIFICACIONES;

CREATE TABLE CONFIGURACIONES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ID INT NOT NULL,
    Preferencias JSON,
    
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID)
);

CREATE TABLE ARCHIVOS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    Nombre VARCHAR(250),
    Ruta VARCHAR(250),
    Tipo ENUM('documento','video','musica','imagenes','comprimido','instalador','aplicacion'),
    USUARIO_ID INT NOT NULL,
    FechaSubida TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIOS(ID)
);

CREATE TABLE LLAMADA (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ID INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Tipo ENUM('individual','grupal'),
    
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIOS(ID)
);

CREATE TABLE INVITACIONES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    USUARIO_ID INT NOT NULL,
    Fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SERVIDOR_ID INT NOT NULL,
    Estado ENUM('Te has unido','Unirse','Expirado'),
    CANAL_ID INT NOT NULL,
    FechaExpiracion TIMESTAMP,
    
    FOREIGN KEY(USUARIO_ID) REFERENCES USUARIOS(ID),
    FOREIGN KEY(SERVIDOR_ID) REFERENCES SERVIDORES(ID),
    FOREIGN KEY(CANAL_ID) REFERENCES CANALES(ID)
);




-- Triggers


DELIMITER //

CREATE TRIGGER set_default_server_name
BEFORE INSERT ON SERVIDORES
FOR EACH ROW
BEGIN
	IF NEW.Nombre IS NULL THEN
		SET NEW.Nombre = CONCAT('Servidor de ', (SELECT NombreUsuario FROM USUARIOS WHERE ID=NEW.CREADOR_ID));
	END IF;
END //

DELIMITER ;